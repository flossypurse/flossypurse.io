---
const projects = [
  {
    id: "luna",
    name: "Luna Lab",
    tagline: "Immersive AI-driven brand playground",
    description:
      "Crafted a modular storytelling platform with live generative visuals and sound-reactive identity moments for a global fashion collective.",
    roles: ["Creative direction", "Experience design", "WebGL engineering"],
    link: "https://example.com/luna"
  },
  {
    id: "pulse",
    name: "Pulse Studio",
    tagline: "Sonic brand OS for music tech startup",
    description:
      "Designed a responsive sound design toolkit with tactile UI and real-time collaboration tools for producers around the world.",
    roles: ["Product strategy", "Interface design", "Design systems"],
    link: "https://example.com/pulse"
  },
  {
    id: "orbit",
    name: "Orbit Atlas",
    tagline: "Interactive data story for climate explorers",
    description:
      "Built an interactive documentary experience blending cinematic scroll, data dramatization, and playful mini-simulations.",
    roles: ["Narrative design", "Creative coding", "Motion systems"],
    link: "https://example.com/orbit"
  }
];
---
<section id="work" class="mx-auto mt-24 w-full max-w-6xl px-6">
  <div class="flex flex-col gap-10">
    <div class="flex flex-col gap-4 md:flex-row md:items-end md:justify-between">
      <div>
        <h2 class="section-title">Selected adventures</h2>
        <p class="section-subtitle">
          Fluid, cinematic, and delightfully extra. Here are a few recent collaborations shaping playful futures.
        </p>
      </div>
      <div class="flex gap-3">
        <button
          class="btn text-xs"
          type="button"
          data-showcase="next"
        >
          <i class="i-lucide-rocket"></i>
          Shuffle magic
        </button>
        <a class="btn text-xs" href="mailto:hello@flossypurse.io?subject=Let%27s%20build%20something%20magical">
          Full portfolio deck
        </a>
      </div>
    </div>
    <div class="grid gap-6 md:grid-cols-3" data-showcase-grid>
      {projects.map((project, index) => (
        <article
          class={`card group flex flex-col justify-between rounded-[2.25rem] p-8 transition-all duration-500 hover:-translate-y-2 hover:border-fuchsia-400/60 hover:shadow-fuchsia-500/40 ${index === 0 ? 'ring-2 ring-fuchsia-400/60' : ''}`}
          data-card={project.id}
        >
          <div class="space-y-4">
            <div class="flex items-center justify-between">
              <span class="chip bg-fuchsia-500/20 text-fuchsia-200">{String(index + 1).padStart(2, '0')}</span>
              <i class="i-lucide-external-link text-slate-300/70"></i>
            </div>
            <h3 class="font-display text-3xl text-white">{project.name}</h3>
            <p class="text-sm uppercase tracking-[0.3em] text-cyan-200">{project.tagline}</p>
            <p class="text-sm text-slate-300/80">{project.description}</p>
          </div>
          <div class="mt-6 space-y-2 text-xs font-semibold uppercase tracking-[0.3em] text-slate-400/80">
            {project.roles.map((role) => (
              <p class="rounded-full border border-white/10 bg-white/5 px-4 py-2 text-slate-200/80">{role}</p>
            ))}
          </div>
          <a class="mt-8 inline-flex items-center gap-2 text-sm font-semibold text-fuchsia-200" href={project.link}>
            Dive into case study
            <i class="i-lucide-external-link"></i>
          </a>
        </article>
      ))}
    </div>
  </div>
  <script is:inline>
    const grid = document.querySelector('[data-showcase-grid]');
    const cards = Array.from(grid?.querySelectorAll('[data-card]') ?? []);
    const button = document.querySelector('[data-showcase="next"]');

    function rotateCards() {
      if (!grid || cards.length === 0) return;
      const first = cards.shift();
      if (first) {
        cards.push(first);
        cards.forEach((card, index) => {
          card.style.setProperty('--order', String(index));
        });
        grid.append(first);
        grid
          .querySelectorAll('[data-card]')
          .forEach((el, index) => {
            el.classList.toggle('ring-2', index === 0);
            el.classList.toggle('ring-fuchsia-400/60', index === 0);
          });
      }
    }

    button?.addEventListener('click', () => {
      rotateCards();
    });
  </script>
</section>
